[
  {
    "Id": 1,
    "title": "Step 1: Create Your Project & Record Complete Feature Flow",
    "description": "Install the AutoTester Chrome Extension and create a comprehensive recording of your web application's complete feature flow. This foundational step ensures AI can understand your app thoroughly and generate comprehensive test cases.",
    "order": 1,
    "category": "setup",
    "duration": "10-15 minutes",
    "difficulty": "easy",
    "icon": "PlayCircle",
    "isCompleted": false,
    "tips": [
      "The more complete your recording, the better AI can understand your app",
      "Don't skip any fields or interactions - record everything",
      "Include both success and error scenarios in your recording",
      "Test all UI elements: buttons, dropdowns, checkboxes, forms",
      "Make sure to navigate through the entire user journey from start to finish"
    ],
    "subSteps": [
      {
        "title": "Install the Chrome Extension",
        "description": "Add the AutoTester Chrome Extension and pin it to your toolbar",
        "action": "Navigate to Chrome Web Store, search for 'AutoTester', install and pin to toolbar"
      },
      {
        "title": "Create a New Project",
        "description": "Provide essential project information",
        "details": [
          "Recording name (e.g., 'User Login Flow')",
          "Your app's starting URL",
          "Brief description of your web application"
        ]
      },
      {
        "title": "Record Your Complete Feature",
        "description": "Be thorough and comprehensive in your recording",
        "requirements": [
          "✅ Click on ALL necessary fields (required and optional)",
          "✅ Fill out forms completely — don't skip any inputs", 
          "✅ Navigate through the entire user journey from start to finish",
          "✅ Include success/error scenarios — try both valid and invalid inputs",
          "✅ Interact with all UI elements — buttons, dropdowns, checkboxes, etc."
        ]
      },
      {
        "title": "Stop Recording",
        "description": "End your recording session when you've covered the complete feature",
        "note": "Make sure you've captured every interaction and navigation path users might take"
      }
    ]
  },
{
    "Id": 2,
    "title": "Step 2: Validate Flow & Generate Test Cases",
    "description": "Review your recorded flow and let AutoTester's AI analyze everything you captured to generate comprehensive test scenarios. This step validates your application's behavior and creates detailed test cases covering success paths, error handling, field requirements, and navigation flows.",
    "order": 2,
    "category": "validation",
    "duration": "5-10 minutes",
    "difficulty": "medium",
    "icon": "CheckCircle",
    "isCompleted": false,
    "tips": [
      "Use the validation controls to test specific aspects of your application",
      "The 'Generate All Tests' button creates comprehensive test coverage",
      "Review validation results to understand what AutoTester detected",
      "Success message validation ensures positive user feedback is working",
      "Error handling validation checks that failures are properly managed"
    ],
    "subSteps": [
      {
        "title": "Review Recorded Flow",
        "description": "AutoTester analyzes your complete recording to understand application behavior",
        "details": [
          "AI processes all your recorded user interactions",
          "Identifies form fields, buttons, and navigation patterns",
          "Maps out user workflows and business logic",
          "Detects validation rules and error scenarios",
          "Understands application structure and dependencies"
        ]
      },
      {
        "title": "Run Validation Tests",
        "description": "Use the validation controls to test specific aspects of your application",
        "options": [
          "Success Messages - Validates positive user feedback",
          "Error Handling - Tests failure scenarios and recovery",
          "Field Requirements - Checks form validation and required fields",
          "Navigation Flows - Verifies user journey paths work correctly",
          "Generate All Tests - Creates comprehensive test coverage"
        ]
      },
      {
        "title": "Generate Comprehensive Test Cases",
        "description": "AutoTester creates detailed test scenarios based on your recording",
        "requirements": [
          "✅ Happy path tests for successful user journeys",
          "✅ Edge case scenarios for boundary testing",
          "✅ Error condition tests for validation failures",
          "✅ Field requirement tests for form validation",
          "✅ Navigation flow tests for user journey verification"
        ]
      },
      {
        "title": "Review Test Results",
        "description": "Analyze the generated validation results and test case details",
        "actions": [
          "Review validation summary with pass/fail counts",
          "Examine detailed results for each test category",
          "Check individual test scenarios and their outcomes",
          "Identify any areas that need attention or improvement",
          "Use timestamp information to track test generation"
        ]
      }
    ],
    "codeExample": "# Generated test types:\n# - Success message validation\n# - Error handling scenarios\n# - Field requirement checks\n# - Navigation flow tests\n# - Comprehensive test coverage",
    "timeEstimate": "5-10 minutes"
  },
{
    "Id": 3,
    "title": "Step 3: AI Creates Executable Test Steps",
    "description": "AI processes your validated flow and generates optimized test steps with minimal actions, proper element locators and interactions, smartly adding success/failure assertions with specific messages, and complete test workflows from start to finish. Review and refine — customize test steps if needed. Your test suite is ready — no coding required!",
    "order": 3,
    "category": "generation",
    "duration": "3-5 minutes",
    "difficulty": "easy",
    "icon": "Zap",
    "isCompleted": false,
    "tips": [
      "AI optimizes test steps to use minimal actions while maintaining comprehensive coverage",
      "Element locators are automatically generated for reliable test execution",
      "Smart assertions include specific success and failure messages",
      "Complete workflows are created from start to finish",
      "Review and customize test steps to match your specific requirements"
    ],
    "subSteps": [
      {
        "title": "AI Processes Validated Flow",
        "description": "AutoTester's AI analyzes your validation results and application flow",
        "details": [
          "Processes validation data from Step 2",
          "Identifies key user interactions and workflows",
          "Maps out optimal test execution paths",
          "Determines required assertions and checkpoints"
        ]
      },
      {
        "title": "Generate Optimized Test Steps",
        "description": "AI creates executable test steps with minimal actions and maximum coverage",
        "options": [
          "Minimal Actions - Focus on essential test steps only",
          "Comprehensive - Include detailed validation and edge cases",
          "Smart Generation - AI-optimized balance of coverage and efficiency"
        ]
      },
      {
        "title": "Smart Assertions & Element Locators",
        "description": "AI automatically generates reliable element locators and meaningful assertions",
        "features": [
          "✅ Proper element locators for consistent test execution",
          "✅ Success/failure assertions with specific messages",
          "✅ Smart element detection and interaction patterns",
          "✅ Automated assertion generation based on expected behavior"
        ]
      },
      {
        "title": "Complete Test Workflows",
        "description": "AI creates end-to-end test workflows from start to finish",
        "workflow": [
          "Navigation and setup steps",
          "User interaction sequences",
          "Data validation and verification",
          "Error handling and recovery testing",
          "Complete user journey validation"
        ]
      },
      {
        "title": "Review & Refine",
        "description": "Customize generated test steps to match your specific requirements",
        "actions": [
          "Review AI-generated test steps and workflows",
          "Customize test parameters and expected outcomes",
          "Export test suite in ready-to-use format",
          "No coding required - everything is generated automatically"
        ]
      }
    ],
    "codeExample": "# AI-generated test features:\n# - Optimized test steps with minimal actions\n# - Proper element locators and interactions\n# - Smart assertions with specific messages\n# - Complete workflows from start to finish\n# - Ready-to-use test suite",
    "timeEstimate": "3-5 minutes"
  },
  {
    "Id": 4,
    "number": 4,
    "title": "Review & Execute Tests",
    "description": "Review the generated test cases, customize as needed, and execute them to validate your application's functionality.",
    "subSteps": [
      "Review AI-generated test cases and scenarios",
      "Customize test parameters and expected outcomes",
      "Execute tests individually or as a complete suite",
      "Analyze test results and failure reports",
      "Schedule automated test runs for continuous testing"
    ],
    "codeExample": "# Execute tests:\n# - Run individual test cases\n# - Execute full test suite\n# - Schedule automated runs\n# - Generate reports",
    "timeEstimate": "5-10 minutes"
  }
]